package profile_manager

import (
	"fmt"

	"github.com/nnlgsakib/neth/chain"
	"github.com/nnlgsakib/neth/helper/common"
	"github.com/nnlgsakib/neth/helper/hex"
	"github.com/nnlgsakib/neth/types"
)

var (
	DefaultProfileContractBalance = "0x0" // Balance to pre-fund the reward contract
	ProfileContractAddress        = types.StringToAddress("0x000000000000000000000000000000000000FFf2")
	//nolint: lll
	ProfileContractBytecode = "0x6080604052600080546001600160a01b031990811661ffff179091556001805490911673c6bf9487f53dee994210b7844636685b9c75bba7179055348015604557600080fd5b50610e70806100556000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630b210bec1461005c5780638a11d7c9146100715780638f2839701461009e578063d40d7835146100b1578063f851a440146100c4575b600080fd5b61006f61006a36600461095f565b6100ef565b005b61008461007f366004610a33565b610379565b604051610095959493929190610a9d565b60405180910390f35b61006f6100ac366004610a33565b61062e565b61006f6100bf366004610afd565b610715565b6001546100d7906001600160a01b031681565b6040516001600160a01b039091168152602001610095565b60008060009054906101000a90046001600160a01b03166001600160a01b031663ca1e78196040518163ffffffff1660e01b8152600401600060405180830381865afa158015610143573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261016b9190810190610bcc565b90506000805b82518110156101bd57336001600160a01b031683828151811061019657610196610c83565b60200260200101516001600160a01b0316036101b557600191506101bd565b600101610171565b5080806101d457506001546001600160a01b031633145b61023d5760405162461bcd60e51b815260206004820152602f60248201527f4f6e6c792076616c696461746f7273206f722061646d696e2063616e2063616c60448201526e36103a3434b990333ab731ba34b7b760891b60648201526084015b60405180910390fd5b3360009081526002602052604090206102568782610d22565b503360009081526002602052604090206001016102738682610d22565b50336000908152600260208190526040909120016102918582610d22565b503360009081526002602052604090206003016102ae8482610d22565b50600054604051632367f6b560e01b81523360048201526001600160a01b0390911690632367f6b590602401602060405180830381865afa1580156102f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031b9190610de0565b33600081815260026020526040908190206004018390555190917f1bd4d80fd2e4e4da9efe783a3b00f76128dadd1e2c808083ebb80bb9f2401fe691610369918a918a918a918a9190610a9d565b60405180910390a2505050505050565b60608060608060008060026000886001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405290816000820180546103c290610c99565b80601f01602080910402602001604051908101604052809291908181526020018280546103ee90610c99565b801561043b5780601f106104105761010080835404028352916020019161043b565b820191906000526020600020905b81548152906001019060200180831161041e57829003601f168201915b5050505050815260200160018201805461045490610c99565b80601f016020809104026020016040519081016040528092919081815260200182805461048090610c99565b80156104cd5780601f106104a2576101008083540402835291602001916104cd565b820191906000526020600020905b8154815290600101906020018083116104b057829003601f168201915b505050505081526020016002820180546104e690610c99565b80601f016020809104026020016040519081016040528092919081815260200182805461051290610c99565b801561055f5780601f106105345761010080835404028352916020019161055f565b820191906000526020600020905b81548152906001019060200180831161054257829003601f168201915b5050505050815260200160038201805461057890610c99565b80601f01602080910402602001604051908101604052809291908181526020018280546105a490610c99565b80156105f15780601f106105c6576101008083540402835291602001916105f1565b820191906000526020600020905b8154815290600101906020018083116105d457829003601f168201915b50505091835250506004919091015460209182015281519082015160408301516060840151608090940151929b919a509850919650945092505050565b6001546001600160a01b031633146106585760405162461bcd60e51b815260040161023490610df9565b6001600160a01b0381166106c35760405162461bcd60e51b815260206004820152602c60248201527f4e65772061646d696e20616464726573732063616e6e6f74206265207468652060448201526b7a65726f206164647265737360a01b6064820152608401610234565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f90600090a35050565b6001546001600160a01b0316331461073f5760405162461bcd60e51b815260040161023490610df9565b6001600160a01b03851660009081526002602052604090206107618582610d22565b506001600160a01b03851660009081526002602052604090206001016107878482610d22565b506001600160a01b0385166000908152600260208190526040909120016107ae8382610d22565b506001600160a01b03851660009081526002602052604090206003016107d48282610d22565b50600054604051632367f6b560e01b81526001600160a01b03878116600483015290911690632367f6b590602401602060405180830381865afa15801561081f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108439190610de0565b6001600160a01b0386166000818152600260205260409081902060040183905551909133917f21e23464e56e0c44501613813d9d56e2c57ba97167ef288f41671c7f7f5bf78c9161089b918991899189918991610a9d565b60405180910390a35050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156108e8576108e86108aa565b604052919050565b600082601f83011261090157600080fd5b81356001600160401b0381111561091a5761091a6108aa565b61092d601f8201601f19166020016108c0565b81815284602083860101111561094257600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561097557600080fd5b84356001600160401b0381111561098b57600080fd5b610997878288016108f0565b94505060208501356001600160401b038111156109b357600080fd5b6109bf878288016108f0565b93505060408501356001600160401b038111156109db57600080fd5b6109e7878288016108f0565b92505060608501356001600160401b03811115610a0357600080fd5b610a0f878288016108f0565b91505092959194509250565b6001600160a01b0381168114610a3057600080fd5b50565b600060208284031215610a4557600080fd5b8135610a5081610a1b565b9392505050565b6000815180845260005b81811015610a7d57602081850181015186830182015201610a61565b506000602082860101526020601f19601f83011685010191505092915050565b60a081526000610ab060a0830188610a57565b8281036020840152610ac28188610a57565b90508281036040840152610ad68187610a57565b90508281036060840152610aea8186610a57565b9150508260808301529695505050505050565b600080600080600060a08688031215610b1557600080fd5b8535610b2081610a1b565b945060208601356001600160401b03811115610b3b57600080fd5b610b47888289016108f0565b94505060408601356001600160401b03811115610b6357600080fd5b610b6f888289016108f0565b93505060608601356001600160401b03811115610b8b57600080fd5b610b97888289016108f0565b92505060808601356001600160401b03811115610bb357600080fd5b610bbf888289016108f0565b9150509295509295909350565b600060208284031215610bde57600080fd5b81516001600160401b03811115610bf457600080fd5b8201601f81018413610c0557600080fd5b80516001600160401b03811115610c1e57610c1e6108aa565b8060051b610c2e602082016108c0565b91825260208184018101929081019087841115610c4a57600080fd5b6020850194505b83851015610c785784519250610c6683610a1b565b82825260209485019490910190610c51565b979650505050505050565b634e487b7160e01b600052603260045260246000fd5b600181811c90821680610cad57607f821691505b602082108103610ccd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610d1d57806000526020600020601f840160051c81016020851015610cfa5750805b601f840160051c820191505b81811015610d1a5760008155600101610d06565b50505b505050565b81516001600160401b03811115610d3b57610d3b6108aa565b610d4f81610d498454610c99565b84610cd3565b6020601f821160018114610d835760008315610d6b5750848201515b600019600385901b1c1916600184901b178455610d1a565b600084815260208120601f198516915b82811015610db35787850151825560209485019460019092019101610d93565b5084821015610dd15786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b600060208284031215610df257600080fd5b5051919050565b60208082526021908201527f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6040820152603760f91b60608201526080019056fea26469706673582212200a25e633fb6d5ec53aab17d2bec5ef419985fdbda6c7da5e83bf87902fcbd5ac64736f6c634300081a0033" // Truncated for brevity
)

// PredeployProfileContract predeploys the reward contract in the genesis block
func PredeployProfileContract() (*chain.GenesisAccount, error) {
	// Decode the bytecode
	scHex, err := hex.DecodeHex(ProfileContractBytecode)
	if err != nil {
		return nil, fmt.Errorf("unable to decode profile_manager contract bytecode: %w", err)
	}

	// Parse the default balance into a *big.Int
	bigDefaultBalance, err := common.ParseUint256orHex(&DefaultProfileContractBalance)
	if err != nil {
		return nil, fmt.Errorf("unable to parse profile_manager contract balance: %w", err)
	}

	// Create the genesis account for the profile_manager contract
	profileAccount := &chain.GenesisAccount{
		Code:    scHex,
		Balance: bigDefaultBalance,
	}

	// Return the pre-configured rewaprofile_managerrd contract account
	return profileAccount, nil
}
